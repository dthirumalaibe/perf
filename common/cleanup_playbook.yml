---
# Playbook used to finish up after all the data collection and parsing
# is complete. All performance tests rely on this playbook.
- name: "Refine collected data locally"
  hosts: localhost
  connection: local
  tasks:
    # Since this task list relies on variables expected to be defined
    # in previous tasks, validate this is the case. It should never
    # fail unless there is a coding error.
    - name: "SYS >> Ensure parameters were defined"
      assert:
        that:
          - "file_id is defined"
          - "csv_header is defined"
        msg: "Required parameters not defined"

    # Iteratively add the files/ and rollups/ directories for
    # first-time runs, especially CI testing.
    - name: "SYS >> Ensure files/ and rollups/ directories exist"
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "../files/"
        - "../rollups/"

    # Define temporary values to clean up future tasks. The source
    # directory and destination file name are commonly used.
    - name: "SYS >> Store src directory and dest path/filename"
      set_fact:
        SRC_DIR: "../files/"
        DEST_FQDN: "../rollups/{{ file_id }}_{{ DTG }}.csv"

    # The individual tests from one node to all targets must be
    # assembled into a common sheet for easier viewing.
    - name: "SYS >> Concatenate CSV files into rollup"
      assemble:
        src: "{{ SRC_DIR }}"
        regexp: "_{{ DTG }}_{{ file_id }}.csv"
        dest: "{{ DEST_FQDN }}"
        mode: 0444

    # Edit the assembled file by inserting the proper column headers
    # at the beginning of the file.
    - name: "SYS >> Insert comma-separated header"
      lineinfile:
        path: "{{ DEST_FQDN }}"
        line: "{{ csv_header }}"
        insertbefore: BOF

    # The source files used to assemble the final rollup are no longer
    # needed. Delete them to clean up.
    - name: "SYS >> Delete original CSV files"
      file:
        path: "{{ item }}"
        state: absent
      with_fileglob: "{{ SRC_DIR }}/*_{{ DTG }}_{{ file_id }}.csv"

    # Print a user-friendly message allowing them to view the CSV
    # file in 'less' with pan capability.
    - name: "SYS >> View file locally; arrows to pan, q to quit"
      debug:
        msg: "column -s, -t {{ DEST_FQDN[3:] }} | less -S"

    # Print a user-friendly message allowing them to easily SCP the
    # rollup from the control machine to their workstations.
    - name: "SYS >> Copy the command below to SCP the rollup off-box"
      debug:
        msg: "scp {{ DEST_FQDN[3:] }} {{ scp.user }}@{{ scp.host }}:/perf/"
...
